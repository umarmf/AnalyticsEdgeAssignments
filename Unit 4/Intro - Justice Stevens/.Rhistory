stevens <- read.csv("stevens.csv")
library(dplyr)
library(ROCR)
library(caTools)
str(stevens)
set.seed(3000)
summary(stevens)
set.seed(3000)
split <- sample.split(stevens$Reverse, 0.7)
train <- stevens[split == TRUE,]
test <- stevens[split == FALSE,]
install.packages("rpart")
library(rpart)
library(rpart.plot)
?rpart
stevenstree <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = Train, method = "class", minbucket = 25)
stevenstree <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, method = "class", minbucket = 25)
prp(stevenstree)
prp(stevenstree)
table(stevens$Respondent)
predictcart <- predict(stevenstree,newdata=test,type="class")
table(test$Reverse,predictcart)
predictroc <- predict(stevenstree,newdata=test)
predictroc
table(test$Reverse,predictcart)
predictroc <- predict(stevenstree,newdata=test)
predictroc
rocrpred <- prediction(predictroc[2],test$Reverse)
library(dplyr)
library(ROCR)
library(caTools)
rocrpred <- prediction(predictroc[2],test$Reverse)
predictroc <- predict(stevenstree,newdata=test)
predictroc
rocrpred <- prediction(predictroc[2],test$Reverse)
nrow(predictroc[2])
nrow(predictroc[2,])
nrow(predictroc[1])
predictroc[1]
rocrpred <- prediction(predictroc[,2],test$Reverse)
perf <- performance(rocrpred,"tpr","fpr")
plot(perf)
perf <- performance(rocrpred,"auc")
perf
plot(rocrpred)
perf <- performance(rocrpred,"tpr","fpr")
plot(perf)
perf <- performance(rocrpred,"auc")@"y,values"
performance(rocrpred,"auc")@"y,values"
performance(rocrpred,"auc")@"y.values"
stevenstreemin5 <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, method = "class", minbucket = 5)
library(rpart)
library(rpart.plot)
stevenstreemin5 <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, method = "class", minbucket = 5)
prp(stevenstreemin5)
prp(stevenstreemin5)
prp(stevenstreemin5)
install.packages("randomForest")
library(randomForest)
stevensforest <- randomForest(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, nodesize = 25, ntree = 200)
train$Reverse <- as.factor(train$Reverse)
test$Reverse <- as.factor(test$Reverse)
stevensforest <- randomForest(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, nodesize = 25, ntree = 200)
summary(stevensforest)
predictforest <- predict(stevensforest,newdata = test)
table(test$Reverse,predictforest)
train$Reverse <- as.factor(train$Reverse)
test$Reverse <- as.factor(test$Reverse)
stevensforest <- randomForest(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, nodesize = 25, ntree = 200)
predictforest <- predict(stevensforest,newdata = test)
table(test$Reverse,predictforest)
(42+74)/(42+35+19+74)
set.seed(100)
stevensforest <- randomForest(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, nodesize = 25, ntree = 200)
predictforest <- predict(stevensforest,newdata = test)
table(test$Reverse,predictforest)
(foresttable[1,1]+foresttable[2,2])/sum(foresttable)
foresttable <- table(test$Reverse,predictforest)
(foresttable[1,1]+foresttable[2,2])/sum(foresttable)
set.seed(200)
predictforest <- predict(stevensforest,newdata = test)
foresttable <- table(test$Reverse,predictforest)
(foresttable[1,1]+foresttable[2,2])/sum(foresttable)
install.packages("caret")
library(caret)
install.packages("e1071")
library(e1071)
numfolds <- trainControl(method="cv", number=10)
cpgrid <- expand.grid(.cp=seq(0.01,0.5,0.01))
train(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst,data=train,method="rpart",trControl=numFolds,tuneGrid=cpgrid)
train(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst,data=train,method="rpart",trControl=numfolds,tuneGrid=cpgrid)
stevenstreecv <- rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=train, method="class",cp=0.18)
library(rpart)
library(rpart.plot)
stevenstreecv <- rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=train, method="class",cp=0.18)
predictcv <- predict(stevenstreecv,newdata=test,type="class")
table(test$Reverse,predictcv)
prp(stevenstreecv)
prp(stevenstreecv)
?train
