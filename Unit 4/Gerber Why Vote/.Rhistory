library(dplyr)
library(ggplot2)
library(RColorBrewer)
source('D:/Personal/R projects/Analytics Edge Edx/Common Scripts/basic_libraries.R')
gerber <- read.csv("gerber.csv")
str(gerber)
summary(gerber)
prop.table(table(gerber$voting,gerber$hawthorne))
gerber %>% filter(hawthorne == 1)
gerber %>% filter(hawthorne == 1) %>% prop.table()
gerber %>% filter(hawthorne == 1) %>% table()
gerber %>% filter(hawthorne == 1) %>% table(voting)
gerber %>% filter(hawthorne == 1) %>% table(gerber$voting)
gerber %>% filter(hawthorne == 1) %>% tapply(gerber$voting,mean)
prop.table(gerber$voting,gerber$hawthorne)
prop.table(table(gerber$voting,gerber$hawthorne))
prop.table(table(gerber$voting,gerber$hawthorne),xlab = true)
prop.table(table(gerber$voting,gerber$hawthorne),xlab = TRUE)
prop.table(table(gerber$voting,gerber$hawthorne))
prop.table(table(gerber$voting,gerber$hawthorne))
table(gerber$voting)
prop.table(table(gerber$voting))
gerberhawthorn <- gerber %>%  filter(hawthorne == 1)
prop.table(gerberhawthorn$voting)
prop.table(table(gerberhawthorn$voting))
summary(gerberhawthorn$voting)
prop.table(table(gerberhawthorn$voting))
gerberhawthorne <- gerber %>%  filter(hawthorne == 1)
prop.table(table(gerberhawthorne$voting))
gerbercivic <- gerber %>%  filter(civic == 1)
gerbercivic <- gerber %>%  filter(civicduty == 1)
gerberneighbors <- gerber %>%  filter(neighbors == 1)
gerberself <- gerber %>%  filter(self == 1)
prop.table(table(gerberhawthorne$voting))
prop.table(table(gerbercivic$voting))
prop.table(table(gerberself$voting))
prop.table(table(gerberneighbors$voting))
#1.3
gerberlog <- glm(voting~hawthorne+civicduty+neighbors+self,data=gerber,family="binomial")
summary(gerberlog)
#1.4
predlog <- predict(gerberlog, type = "response")
predlogtable <- table(gerber$voting,predlog >=0.3)
acc <- (predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
#1.5
predlogtable <- table(gerber$voting,predlog >=0.5)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
#1.5
predlogtable <- table(gerber$voting,predlog >=0.5)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable
predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
#1.5
predlogtable <- table(gerber$voting,predlog >=0.5)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
predlogtable <- table(gerber$voting,predlog >=0.3)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
#1.5
predlogtable <- table(gerber$voting,predlog >=0.5)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
predlogtable <- table(gerber$voting,predlog >=0.3)
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
predlogtable
(predlogtable[1,1]+predlogtable[2,2])/sum(predlogtable)
#1.5
predlogtable <- table(gerber$voting,predlog >=0.5)
predlogtable
predlogtable[1]/sum(predlogtable)
#1.6
rocrpred <- prediction(predlog,gerber$voting)
library(caTools)
#1.6
rocrpred <- prediction(predlog,gerber$voting)
# Plot AUC graph
library(ROCR)
rocrpred <- prediction(predlog,gerber$voting)
perf <- performance(rocrpred,"tpr","fpr")
plot(perf)
rocrpred <- prediction(predlog,gerber$voting)
as.numeric(performance(rocrpred,"auc")@"y.values")
perf <- performance(rocrpred,"tpr","fpr")
plot(perf)
#2.1
library(rpart)
library(rpart.plot)
CARTmodel = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber)
prp(CARTmodel)
CARTmodel = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber)
prp(CARTmodel)
CARTmodel = rpart(voting ~ civicduty + hawthorne + self + neighbors, data=gerber, cp=0.0)
prp(CARTmodel)
#2.4
CARTmodel = rpart(voting ~ sex + civicduty + hawthorne + self + neighbors, data=gerber, cp=0.0)
prp(CARTmodel)
str(gerber)
#2.5
CARTmodel = rpart(voting ~ control, data=gerber, cp=0.0)
prp(CARTmodel)
summary(CARTmodel)
CARTmodel = rpart(voting ~ control+sex, data=gerber, cp=0.0)
prp(CARTmodel)
#2.5
CARTmodel = rpart(voting ~ control, data=gerber, cp=0.0)
prp(CARTmodel)
prp(CARTmodel, digits = 6)
0.34-0.296638
CARTmodel = rpart(voting ~ control+sex, data=gerber, cp=0.0)
prp(CARTmodel, digits = 6)
0.334176-0.290456
0.345818-0.302795
0.334176-0.290456 - (0.345818-0.302795)
#3.3
control_log <- glm(voting~sex+control,data=gerber,family="binomial")
summary(control_log)
